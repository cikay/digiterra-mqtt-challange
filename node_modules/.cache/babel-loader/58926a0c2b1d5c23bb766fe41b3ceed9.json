{"ast":null,"code":"var _jsxFileName = \"/home/muzaffer/Desktop/digiterra-mqtt/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport HookMqtt from './HookMqtt';\nimport mqtt from '../frontend/node_modules/mqtt';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst queryTopic = 'resolveMyQuery';\nconst responseTopic = 'responseFromServer';\nconst url = 'ws://test.mosquitto.org:8080';\n\nfunction App() {\n  _s();\n\n  const [connectionStatus, setConnectionStatus] = React.useState(false);\n  const [messages, setMessages] = React.useState([]);\n  useEffect(() => {\n    const mqttClient = mqtt.connect(url);\n    console.log('mqtt', mqtt);\n    mqttClient.on('connect', () => {\n      setConnectionStatus(true);\n      mqttClient.subscribe(queryTopic);\n    });\n    mqttClient.on('message', (topic, message) => {\n      setMessages(messages.concat(message.toString()));\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: messages.map(message => /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n}\n\n_s(App, \"/s/6c3wKvlujdzsU6aXn4suyncg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/muzaffer/Desktop/digiterra-mqtt/src/App.js"],"names":["React","useState","useEffect","HookMqtt","mqtt","queryTopic","responseTopic","url","App","connectionStatus","setConnectionStatus","messages","setMessages","mqttClient","connect","console","log","on","subscribe","topic","message","concat","toString","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,+BAAjB;;;AAEA,MAAMC,UAAU,GAAG,gBAAnB;AACA,MAAMC,aAAa,GAAG,oBAAtB;AACA,MAAMC,GAAG,GAAG,8BAAZ;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CV,KAAK,CAACC,QAAN,CAAe,KAAf,CAAhD;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BZ,KAAK,CAACC,QAAN,CAAe,EAAf,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,UAAU,GAAGT,IAAI,CAACU,OAAL,CAAaP,GAAb,CAAnB;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBZ,IAApB;AACAS,IAAAA,UAAU,CAACI,EAAX,CAAc,SAAd,EAAyB,MAAM;AAC7BP,MAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACAG,MAAAA,UAAU,CAACK,SAAX,CAAqBb,UAArB;AACD,KAHD;AAIAQ,IAAAA,UAAU,CAACI,EAAX,CAAc,SAAd,EAAyB,CAACE,KAAD,EAAQC,OAAR,KAAoB;AAC3CR,MAAAA,WAAW,CAACD,QAAQ,CAACU,MAAT,CAAgBD,OAAO,CAACE,QAAR,EAAhB,CAAD,CAAX;AACD,KAFD;AAGD,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACE;AAAA,cACGX,QAAQ,CAACY,GAAT,CAAcH,OAAD,iBACZ;AAAA,gBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,YADD;AADH,mBADF;AAOD;;GAvBQZ,G;;KAAAA,G;AAyBT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport HookMqtt from './HookMqtt'\nimport mqtt from '../frontend/node_modules/mqtt'\n\nconst queryTopic = 'resolveMyQuery'\nconst responseTopic = 'responseFromServer'\nconst url = 'ws://test.mosquitto.org:8080'\nfunction App() {\n  const [connectionStatus, setConnectionStatus] = React.useState(false)\n  const [messages, setMessages] = React.useState([])\n\n  useEffect(() => {\n    const mqttClient = mqtt.connect(url)\n    console.log('mqtt', mqtt)\n    mqttClient.on('connect', () => {\n      setConnectionStatus(true)\n      mqttClient.subscribe(queryTopic)\n    })\n    mqttClient.on('message', (topic, message) => {\n      setMessages(messages.concat(message.toString()))\n    })\n  }, [])\n\n  return (\n    <>\n      {messages.map((message) => (\n        <h2>{message}</h2>\n      ))}\n    </>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}