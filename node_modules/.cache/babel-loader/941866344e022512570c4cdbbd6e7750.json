{"ast":null,"code":"var _jsxFileName = \"/home/muzaffer/Desktop/digiterra-mqtt/src/connection.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Card, Button, Form, Input, Row, Col } from '../frontend/node_modules/antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Connection = ({\n  connect,\n  disconnect,\n  connectBtn\n}) => {\n  _s();\n\n  const [form] = Form.useForm(); //ws://mqtttest.connio.cloud:8083/mqtt\n\n  const record = {\n    host: 'broker.emqx.io',\n    clientId: `mqttjs_ + ${Math.random().toString(16).substr(2, 8)}`,\n    port: 8083\n  };\n\n  const onFinish = values => {\n    const {\n      host,\n      clientId,\n      port,\n      username,\n      password\n    } = values;\n    const newPort = 8083;\n    const newHost = 'mqtttest.connio.cloud';\n    const url = `ws://${newHost}:${newPort}/mqtt`;\n    const options = {\n      keepalive: 30,\n      protocolId: 'MQTT',\n      protocolVersion: 4,\n      clean: true,\n      reconnectPeriod: 1000,\n      connectTimeout: 30 * 1000,\n      will: {\n        topic: 'WillMsg',\n        payload: 'Connection Closed abnormally..!',\n        qos: 0,\n        retain: false\n      },\n      rejectUnauthorized: false\n    };\n    options.clientId = clientId;\n    options.username = username;\n    options.password = password;\n    connect(url, options);\n  };\n\n  const handleConnect = () => {\n    form.submit();\n  };\n\n  const handleDisconnect = () => {\n    disconnect();\n  };\n\n  const ConnectionForm = /*#__PURE__*/_jsxDEV(Form, {\n    layout: \"vertical\",\n    name: \"basic\",\n    form: form,\n    initialValues: record,\n    onFinish: onFinish,\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      gutter: 20,\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Host\",\n          name: \"host\",\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Port\",\n          name: \"port\",\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Client ID\",\n          name: \"clientId\",\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Username\",\n          name: \"username\",\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Password\",\n          name: \"password\",\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    title: \"Connection\",\n    actions: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: handleConnect,\n      children: connectBtn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      danger: true,\n      onClick: handleDisconnect,\n      children: \"Disconnect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)],\n    children: ConnectionForm\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Connection, \"rI7DrJIrFu7YmlGWYiMFTzs8jF0=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = Connection;\nexport default Connection;\n\nvar _c;\n\n$RefreshReg$(_c, \"Connection\");","map":{"version":3,"sources":["/home/muzaffer/Desktop/digiterra-mqtt/src/connection.js"],"names":["React","Card","Button","Form","Input","Row","Col","Connection","connect","disconnect","connectBtn","form","useForm","record","host","clientId","Math","random","toString","substr","port","onFinish","values","username","password","newPort","newHost","url","options","keepalive","protocolId","protocolVersion","clean","reconnectPeriod","connectTimeout","will","topic","payload","qos","retain","rejectUnauthorized","handleConnect","submit","handleDisconnect","ConnectionForm"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,EAA6BC,KAA7B,EAAoCC,GAApC,EAAyCC,GAAzC,QAAoD,+BAApD;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,UAAX;AAAuBC,EAAAA;AAAvB,CAAD,KAAyC;AAAA;;AAC1D,QAAM,CAACC,IAAD,IAASR,IAAI,CAACS,OAAL,EAAf,CAD0D,CAE1D;;AACA,QAAMC,MAAM,GAAG;AACbC,IAAAA,IAAI,EAAE,gBADO;AAEbC,IAAAA,QAAQ,EAAG,aAAYC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,MAA3B,CAAkC,CAAlC,EAAqC,CAArC,CAAwC,EAFlD;AAGbC,IAAAA,IAAI,EAAE;AAHO,GAAf;;AAKA,QAAMC,QAAQ,GAAIC,MAAD,IAAY;AAC3B,UAAM;AAAER,MAAAA,IAAF;AAAQC,MAAAA,QAAR;AAAkBK,MAAAA,IAAlB;AAAwBG,MAAAA,QAAxB;AAAkCC,MAAAA;AAAlC,QAA+CF,MAArD;AACA,UAAMG,OAAO,GAAG,IAAhB;AACA,UAAMC,OAAO,GAAG,uBAAhB;AACA,UAAMC,GAAG,GAAI,QAAOD,OAAQ,IAAGD,OAAQ,OAAvC;AACA,UAAMG,OAAO,GAAG;AACdC,MAAAA,SAAS,EAAE,EADG;AAEdC,MAAAA,UAAU,EAAE,MAFE;AAGdC,MAAAA,eAAe,EAAE,CAHH;AAIdC,MAAAA,KAAK,EAAE,IAJO;AAKdC,MAAAA,eAAe,EAAE,IALH;AAMdC,MAAAA,cAAc,EAAE,KAAK,IANP;AAOdC,MAAAA,IAAI,EAAE;AACJC,QAAAA,KAAK,EAAE,SADH;AAEJC,QAAAA,OAAO,EAAE,iCAFL;AAGJC,QAAAA,GAAG,EAAE,CAHD;AAIJC,QAAAA,MAAM,EAAE;AAJJ,OAPQ;AAadC,MAAAA,kBAAkB,EAAE;AAbN,KAAhB;AAeAZ,IAAAA,OAAO,CAACb,QAAR,GAAmBA,QAAnB;AACAa,IAAAA,OAAO,CAACL,QAAR,GAAmBA,QAAnB;AACAK,IAAAA,OAAO,CAACJ,QAAR,GAAmBA,QAAnB;AACAhB,IAAAA,OAAO,CAACmB,GAAD,EAAMC,OAAN,CAAP;AACD,GAxBD;;AA0BA,QAAMa,aAAa,GAAG,MAAM;AAC1B9B,IAAAA,IAAI,CAAC+B,MAAL;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAG,MAAM;AAC7BlC,IAAAA,UAAU;AACX,GAFD;;AAIA,QAAMmC,cAAc,gBAClB,QAAC,IAAD;AACE,IAAA,MAAM,EAAC,UADT;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,IAAI,EAAEjC,IAHR;AAIE,IAAA,aAAa,EAAEE,MAJjB;AAKE,IAAA,QAAQ,EAAEQ,QALZ;AAAA,2BAOE,QAAC,GAAD;AAAK,MAAA,MAAM,EAAE,EAAb;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,IAAI,EAAE,CAAX;AAAA,+BACE,QAAC,IAAD,CAAM,IAAN;AAAW,UAAA,KAAK,EAAC,MAAjB;AAAwB,UAAA,IAAI,EAAC,MAA7B;AAAA,iCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,GAAD;AAAK,QAAA,IAAI,EAAE,CAAX;AAAA,+BACE,QAAC,IAAD,CAAM,IAAN;AAAW,UAAA,KAAK,EAAC,MAAjB;AAAwB,UAAA,IAAI,EAAC,MAA7B;AAAA,iCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF,eAWE,QAAC,GAAD;AAAK,QAAA,IAAI,EAAE,CAAX;AAAA,+BACE,QAAC,IAAD,CAAM,IAAN;AAAW,UAAA,KAAK,EAAC,WAAjB;AAA6B,UAAA,IAAI,EAAC,UAAlC;AAAA,iCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAXF,eAgBE,QAAC,GAAD;AAAK,QAAA,IAAI,EAAE,CAAX;AAAA,+BACE,QAAC,IAAD,CAAM,IAAN;AAAW,UAAA,KAAK,EAAC,UAAjB;AAA4B,UAAA,IAAI,EAAC,UAAjC;AAAA,iCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAhBF,eAqBE,QAAC,GAAD;AAAK,QAAA,IAAI,EAAE,CAAX;AAAA,+BACE,QAAC,IAAD,CAAM,IAAN;AAAW,UAAA,KAAK,EAAC,UAAjB;AAA4B,UAAA,IAAI,EAAC,UAAjC;AAAA,iCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,UADF;;AAsCA,sBACE,QAAC,IAAD;AACE,IAAA,KAAK,EAAC,YADR;AAEE,IAAA,OAAO,EAAE,cACP,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,OAAO,EAAEoB,aAAhC;AAAA,gBACG/B;AADH;AAAA;AAAA;AAAA;AAAA,YADO,eAIP,QAAC,MAAD;AAAQ,MAAA,MAAM,MAAd;AAAe,MAAA,OAAO,EAAEiC,gBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJO,CAFX;AAAA,cAWGC;AAXH;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA/FD;;GAAMrC,U;UACWJ,IAAI,CAACS,O;;;KADhBL,U;AAiGN,eAAeA,UAAf","sourcesContent":["import React from 'react'\nimport { Card, Button, Form, Input, Row, Col } from '../frontend/node_modules/antd'\n\nconst Connection = ({ connect, disconnect, connectBtn }) => {\n  const [form] = Form.useForm()\n  //ws://mqtttest.connio.cloud:8083/mqtt\n  const record = {\n    host: 'broker.emqx.io',\n    clientId: `mqttjs_ + ${Math.random().toString(16).substr(2, 8)}`,\n    port: 8083,\n  }\n  const onFinish = (values) => {\n    const { host, clientId, port, username, password } = values\n    const newPort = 8083\n    const newHost = 'mqtttest.connio.cloud'\n    const url = `ws://${newHost}:${newPort}/mqtt`\n    const options = {\n      keepalive: 30,\n      protocolId: 'MQTT',\n      protocolVersion: 4,\n      clean: true,\n      reconnectPeriod: 1000,\n      connectTimeout: 30 * 1000,\n      will: {\n        topic: 'WillMsg',\n        payload: 'Connection Closed abnormally..!',\n        qos: 0,\n        retain: false,\n      },\n      rejectUnauthorized: false,\n    }\n    options.clientId = clientId\n    options.username = username\n    options.password = password\n    connect(url, options)\n  }\n\n  const handleConnect = () => {\n    form.submit()\n  }\n\n  const handleDisconnect = () => {\n    disconnect()\n  }\n\n  const ConnectionForm = (\n    <Form\n      layout='vertical'\n      name='basic'\n      form={form}\n      initialValues={record}\n      onFinish={onFinish}\n    >\n      <Row gutter={20}>\n        <Col span={8}>\n          <Form.Item label='Host' name='host'>\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item label='Port' name='port'>\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item label='Client ID' name='clientId'>\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item label='Username' name='username'>\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item label='Password' name='password'>\n            <Input />\n          </Form.Item>\n        </Col>\n      </Row>\n    </Form>\n  )\n\n  return (\n    <Card\n      title='Connection'\n      actions={[\n        <Button type='primary' onClick={handleConnect}>\n          {connectBtn}\n        </Button>,\n        <Button danger onClick={handleDisconnect}>\n          Disconnect\n        </Button>,\n      ]}\n    >\n      {ConnectionForm}\n    </Card>\n  )\n}\n\nexport default Connection\n"]},"metadata":{},"sourceType":"module"}